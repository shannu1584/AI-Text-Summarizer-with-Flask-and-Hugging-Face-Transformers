# -*- coding: utf-8 -*-
"""summarisation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P-_Q1vhwccA4tYom2GKipLRo9ojYs2HB
"""

!pip install transformers torch

from transformers import pipeline
summarizer=pipeline("summarization",model="slauw87/bart_summarisation")
text="""The recent Grape Stomp 5K at Lincoln Way Vineyards raised critical support for PAWS for the Wayne County Dog Shelter.The event, now in its third year, saw approximately 165 registered runners, up from about 120 in its first year, according to a community announcement.
Vineyard owner Jim Borton, who adopted a dog from the shelter about 15 years ago, said he considers his winery the perfect place to host the run.Everything just sort of came together to make it possible for us to host this event and support PAWS, Borton said in the announcement.
Visitors to the vineyard are always welcome to bring their pets to the patio, the picnic and the upstairs event space when it is open-everywhere where we don't have food handling activities."""

summary=summarizer(text,max_length=50,min_length=20,do_sample=True)
print("Original Text:\n",text)
print("\nSummary:\n",summary[0])

!pip install newspaper3k lxml[html5] lxml_html_clean

from newspaper import Article
url="https://timesofindia.indiatimes.com/city/delhi/hold-your-breath-annual-punishment-begins/articleshow/124745867.cms"
article=Article(url)
article.download()
article.parse()
print("Original Article Text(first 700 chars):\n")
print(article.text[:700])

summary=summarizer(article.text,max_length=120,min_length=50,do_sample=False)
print("\nSummary:\n",summary[0]['summary_text'])

def summarize_text_or_url(input_text=None, input_url=None):
    summarizer = pipeline("summarization", model="facebook/bart-large-cnn")
    if input_url:
        article = Article(input_url)
        article.download()
        article.parse()
        text = article.text
    elif input_text:
        text = input_text
    else:
        return "Please provide text or URL."

    summarized = summarizer(text, max_length=150, min_length=50, do_sample=False)
    return summarized[0]['summary_text']

# Example usage
result = summarize_text_or_url(input_text="Machine learning is a branch of artificial intelligence...")
print(result)

!pip install flask pyngrok transformers torch

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# from flask import Flask, render_template, request
# from transformers import pipeline
# from newspaper import Article
# 
# app = Flask(__name__)
# 
# # Load summarization model once
# summarizer = pipeline("summarization", model="facebook/bart-large-cnn")
# 
# def summarize_text_or_url(input_text=None, input_url=None):
#     """Summarize either plain text or a news article URL."""
#     if input_url:
#         try:
#             article = Article(input_url)
#             article.download()
#             article.parse()
#             text = article.text
#         except Exception as e:
#             return f"‚ö†Ô∏è Error reading article: {str(e)}"
#     elif input_text:
#         text = input_text
#     else:
#         return "Please provide either text or URL."
# 
#     # Summarize
#     summarized = summarizer(text, max_length=150, min_length=50, do_sample=False)
#     return summarized[0]['summary_text']
# 
# 
# @app.route("/", methods=["GET", "POST"])
# def home():
#     summary_result = ""
#     input_text = ""
#     input_url = ""
# 
#     if request.method == "POST":
#         input_text = request.form.get("input_text")
#         input_url = request.form.get("input_url")
#         summary_result = summarize_text_or_url(input_text=input_text, input_url=input_url)
# 
#     return render_template("index.html", summary=summary_result, text=input_text, url=input_url)
# 
# 
# if __name__ == "__main__":
#     app.run(host="0.0.0.0", port=8000, debug=False)
#

!mkdir -p model       # To save your trained model
!mkdir -p uploads     # Optional, if you want to allow CSV uploads

!mkdir -p templates

# Commented out IPython magic to ensure Python compatibility.
# %%writefile templates/index.html
# <!DOCTYPE html>
# <html>
# <head>
#   <title>Text & URL Summarizer</title>
#   <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
# </head>
# <body>
#   <div class="container">
#     <h1>üì∞ Text & URL Summarizer</h1>
# 
#     <form method="POST">
#       <h3>Summarize Text</h3>
#       <textarea name="input_text" rows="6" placeholder="Paste or type text here...">{{ text }}</textarea>
# 
#       <h3>Or Summarize from URL</h3>
#       <input type="text" name="input_url" placeholder="Enter a news article URL" value="{{ url }}">
# 
#       <button type="submit">Summarize</button>
#     </form>
# 
#     {% if summary %}
#     <div class="result">
#       <h3>üßæ Summary:</h3>
#       <p>{{ summary }}</p>
#     </div>
#     {% endif %}
#   </div>
# </body>
# </html>
#

!mkdir -p static

# Commented out IPython magic to ensure Python compatibility.
# %%writefile static/style.css
# body {
#   font-family: Arial, sans-serif;
#   background-color: #f4f4f9;
#   margin: 0;
#   padding: 0;
# }
# 
# .container {
#   max-width: 800px;
#   margin: 40px auto;
#   background: white;
#   padding: 30px;
#   border-radius: 12px;
#   box-shadow: 0 0 10px rgba(0,0,0,0.2);
# }
# 
# h1 {
#   text-align: center;
#   color: #333;
# }
# 
# form {
#   margin-top: 20px;
# }
# 
# textarea, input[type="text"] {
#   width: 100%;
#   margin-top: 10px;
#   padding: 10px;
#   border: 1px solid #ccc;
#   border-radius: 5px;
#   font-size: 16px;
# }
# 
# button {
#   width: 100%;
#   margin-top: 15px;
#   padding: 12px;
#   background-color: #4CAF50;
#   color: white;
#   font-size: 18px;
#   border: none;
#   border-radius: 5px;
#   cursor: pointer;
# }
# 
# button:hover {
#   background-color: #45a049;
# }
# 
# .result {
#   background: #e8f5e9;
#   padding: 15px;
#   margin-top: 20px;
#   border-left: 5px solid #4CAF50;
#   border-radius: 8px;
# }
#

!pkill -f flask || echo "No flask running"
!pkill -f ngrok || echo "No ngrok running"

!lsof -i :8000

!kill -9 3269 # here ID no shud be changed based on the above cell { PID 1949 }

!nohup python app.py > flask.log 2>&1 &

# Start ngrok tunnel
from pyngrok import ngrok, conf
conf.get_default().auth_token = "33pyU8XWfrN8JFX8kwzY8Uf1j7s_612rotnaQX2f58dq3n8Ez"

public_url = ngrok.connect(8000)
print("üåç Public URL:", public_url)

# Optional: check logs
!sleep 3 && tail -n 20 flask.log